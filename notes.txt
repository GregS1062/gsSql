structure of a column
    column name
    full table name/column name
    alias table name/column name

SELECT, FROM, WHERE, GROUP BY, HAVING, and ORDER BY

---------------------------------------------------------
select top 5 * from customers where custid in select custid from orders where tax > 100

-----------------------------------------------------------
SELECT Book.title AS Title,
       count(*) AS Authors
 FROM  Book
 JOIN  Book_author
   ON  Book.isbn = Book_author.isbn  GROUP BY Book.title;

-----------------------------------------------------------
 SELECT b.id, b.title, b.type, t.last_name AS translator
FROM books b
JOIN translators t
ON b.translator_id = t.id ORDER BY b.id;
-----------------------------------------------------------
SELECT *
FROM Orders
LEFT JOIN OrderLines ON OrderLines.OrderID=Orders.ID
WHERE Orders.ID = 12345
-----------------------------------------------------------
check list of functions as valid column names

-----------------------------------------------------------------------------------------------------------
Functions:
    - are a reporting element with a specific place.
    - must be acted upon on a row by row basis
    - can be specific to a column
    - yet can be tied only to a row (*)
    - the asterisk cannot be confused with "include all columns"
        - COUNT(*) 
          - counting rows
            - all
            - in a group
        - SUM(column)
          - the sum of all values
            - all
            - in a group
        - MAX(column)
          - highest value of column
            - all
            - in a group
        - MIN(column)
          - lowest value of column
            - all
            - in a group
        - AVG
          - average value of column
          - combines both COUNT and SUM
            - all
            - in a group
    Functions need to be 
      - identified on a Column/Temp level
      - acted upon at a row level
      - acted upon at a control break level

HAVING addresses function statements
    Form:
      group by zipcode Having Count(*) > 10
      group by order Having Max(tax) < 100
      Max(tax) as max tax group by order Having max tax > 50
-----------------------------------------------------------------------------------------------------------
Joins
-----------------------------------------------------------------------------------------------------------
Statements > 1 trigger the following logic
  - Subqueries will always be executed first
  - Joins 
    - Analyze the indexes
      - Execution order does not matter if both tables are joined on indexed keys.
      - if a table is not indexed on join key, execute if first
  Assign order to statements
  Sort by execution order
  Execute first statement
  Clear parsing objects
  Feed results of statement into next execute
    - Fetch merge table row based on index keys
    - If no index match scan table and follow sequential merge logic
    - Check join conditions
    - Merge columns
  Return to print

-----------------------------------------------------------------------------------------------------------
Data Access
-----------------------------------------------------------------------------------------------------------
  - read
  - write
  - append
  - find: returns location by key
  - Next: returns location by location
  - SearchRange: returns location list by key


