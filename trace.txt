
******************  BEGIN   *****************
 query=select top 5 o.orderid, i.orderid, i.productid from orders o join items i on o.orderid = i.orderid
------------- split ----------------
Split select top 5 o.orderid, i.orderid, i.productid from orders o 
-----------------------------------------------------
***************************************************************
                 BEGIN QUERY PARSE
***************************************************************
 query=select top 5 o.orderid, i.orderid, i.productid from orders o 
determine action select

-------------------------BEGIN PROCESS SELECT-------------------------------------------
Query String = select top 5 o.orderid, i.orderid, i.productid from orders o 

-------------------------PARSE CLAUSES - SELECT -------------------------------------------
Query String = select top 5 o.orderid, i.orderid, i.productid from orders o 

-----------Parse Table List----------------
tableString:orders o 
token orders o 

-----------Parse Column List----------------
Column string: o.orderid, i.orderid, i.productid 
Column parts: function: name:orderid alias: table Alias o
Column parts: function: name:orderid alias: table Alias i
Column parts: function: name:productid alias: table Alias i
 table name orders o|| 

Split join items i on o.orderid = i.orderid
-----------------------------------------------------
***************************************************************
                 BEGIN QUERY PARSE
***************************************************************
 query=join items i on o.orderid = i.orderid
determine action join

-------------------------BEGIN PROCESS SELECT-------------------------------------------
Query String = join items i on o.orderid = i.orderid
********************* parseJoin *******************

-----------Parse Table List----------------
tableString:items i
token items i

-----------Parse Column List----------------
Column string:

-----------Parse Conditions----------------
Join Condition:o.orderid = i.orderid
token=o.orderid
Column parts: function: name:orderid alias: table Alias o
token==
token=i.orderid
Column parts: function: name:orderid alias: table Alias i
 table name items i|| 

 iElement tablename orders o

-------------------------BEGIN BIND-------------------------------------------
statement table name orders o
-------------------- bind column list ----------------
 col orderid added to table orders
 col orderid added to table items
 col productid added to table items
 iElement tablename items i

-------------------------BEGIN BIND-------------------------------------------
statement table name items i
-------------------- bind column list ----------------
binding condition name orderid 
binding condition compareToName orderid 
*******************************************
 Statement Table
*******************************************
 table name orders alias o record length 99
	 column name orderid alias  value  function 0 PRIMARY

 Conditions

 Indexes 
	 index name orderid  file name /home/greg/projects/test/testIndex/orderid.idx
		 index column name orderid

-------------------------BEGIN SELECT ENGINE-------------------------------------------
*******************************************
 Statement Table
*******************************************
 table name items alias i record length 51
	 column name orderid alias  value  function 0 PRIMARY
	 column name productid alias  value  function 0

 Conditions
	 name: orderid alias:  tableName: o function: 
	 name: orderid alias:  tableName: i function: 
	 condition condition 
	 condition op        =
	 condition value     

 Indexes 
	 index name orderid  file name /home/greg/projects/test/testIndex/itemOrder.idx
		 index column name orderid
matching orderid to column orderid
join on index orderid
 join key SO43659 location 0
 join key SO43660 location 612
 join key SO43661 location 1173
 join key SO43662 location 2346
 join key SO43663 location 2601

printing


